mixin placeForm()
	button.btn#btnBack(style='display:none')
		i.icon-chevron-left
	form#placeForm(action='/place', method='POST', enctype='multipart/form-data', style='display:none')
		input#yakcatInput(type='hidden', name='yakcatInput', value='')
		input#yakcatNames(type='hidden', name='yakcatNames', value='')
		input#placeInput(type='hidden', name='placeInput', value='')
		input#latitude(type="hidden",data-provide="typeahead", name="latitude")
		input#longitude(type="hidden",data-provide="typeahead", name="longitude")
		input#update(type="hidden",data-provide="typeahead", name="update", value='0')
		input#objid(type="hidden",data-provide="typeahead", name="objid", value='0')

		legend Ajouter une place
		div.control-group.error
				div.controls
					label.alert#err(type="text", id="err", name="err", style='display:none') Les champs en rouge sont obligatoires.
		div.control-group#titleGroup
			div.controls
				label Titre
				input.big.hashtagMaker(type='text', name='title', id='title', placeholder='Opéra Bastille, Restaurant du Coin #BonneBouffe2012')
		div.control-group#contentGroup
			div.controls
				label Description
				textarea.hashtagMaker(type='text', id='content', name='content', placeholder="Quelques détails sur la place à ajouter, avec la possibilité d'ajouter des #hashtags.", rows='3')
		div.control-group#licenceGroup
			div.controls
				.col
					label Licence
					input.hashtagMaker(type='text', name='licence', id='licence', placeholder='Open Source', autocomplete="off")
				.col
					label Origine
					input.hashtagMaker(type='text', name='origine', id='origine', placeholder='Yakwala', autocomplete="on")
				.col
					label Outgoing Link
					input(type='text', name='outgoinglink', id='outgoinglink', placeholder='outgoinglink')
		div.control-group#adresseGroup.clearBoth
			div.controls
				label(for='Place') Adresse
				.input-append
					input.big(type="text",data-provide="typeahead", id="place", name="place", autocomplete="on", placeholder="Cliquer sur la carte ou entrer l'adresse")
					button.btn#btn-place-adder(type="button") Ajouter
		div.control-group#yakcatGroup
			div.controls
				.col
					label(for='category') Thèmes
					input(type="text", data-provide="typeahead", id="yakcat", name="yakcat", autocomplete="off", placeholder='Un ou plusieurs thèmes')
					.pillbox#pillYakcat(style="display:none")
						ul
				.col
					label Free Tags
					input#freetag(type="text", data-provide="typeahead", name="freetag",placeholder='Free tags séparés par des virgules')
		div.control-group.clearBoth
			div.controls
				label Contact
				.col
					input#tel(type="text", data-provide="typeahead", name="tel", placeholder='Téléphone')
				.col
					input#mobile(type="text", data-provide="typeahead", name="mobile", placeholder='Mobile')
				.col
					input#mail(type="text", data-provide="typeahead", name="mail", placeholder='Email')
				.col
					input#web(type="text", data-provide="typeahead", name="web", placeholder='Site web')
				label.clearBoth Horaires / Transport
				.col
					input#opening(type="text", data-provide="typeahead", name="opening", placeholder="Horaires d'ouverture")
				.col
					input#closing(type="text", data-provide="typeahead", name="closing", placeholder='Horaires de fermeture')
				.col
					input#special(type="text", data-provide="typeahead", name="special", placeholder='Ouverture exceptionnelle')
				.col
					input#transportation(type="text", data-provide="typeahead", name="transportation", placeholder='Comment y arriver? (ex: métro ligne 2 station Jaurès)')

				label(for='picture').clearBoth Photo
				input#picture(type="file", name="picture")
				span#picturePreview
			div.control-group
				div.controls
					label Status
					label.radio.inline Valider
						input#option1(type="radio", name="status", value="1" , checked)
					label.radio.inline En attente
						input#option4(type="radio", name="status", value="2")
					label.radio.inline Rejeter
						input#option2(type="radio", name="status", value="3")
					label.radio.inline Erreur de localisation
						input#options3(type="radio", name="status", value="10")
			div.control-group
				div.controls
					button.btn.btn-large.btn-inverse(type='submit', name='submit', id='submit', value='Envoyer') Envoyer

	script
		// Edit Place function
		$(".editPlace").live('click', function()
		{
			event.preventDefault();
			listenerHandle = google.maps.event.addListener(map, 'click', function(event) {
				getformattedAddress(event.latLng);
				placeMarker(event.latLng,markerLocation);
				google.maps.event.addListener(markerLocation, 'dragend', function() {
					var position = markerLocation.getPosition();
					$('#placeForm #latitude').val(position.lat());
					$('#placeForm #longitude').val(position.lng());

					getformattedAddress(position);

				});
			});

			$("#MyGrid").hide();
			// We remove the error class when we open a form for editing a place
			$('#placeForm #titleGroup').removeClass("error");
			$('#placeForm #contentGroup').removeClass("error");
			$('#placeForm #licenceGroup').removeClass("error");
			$('#placeForm #origineGroup').removeClass("error");
			$('#placeForm #adresseGroup').removeClass("error");
			$("#btnBack").fadeIn();
			$("#placeForm").fadeIn();
			$(".catLabel").remove();
			$("#pillYakcat ul").empty();
			$('#err').hide();
			yakcatArray = new Array();
			yakcatNames = new Array();

			$("#placeForm legend").html("Editer une place");
			$("#placeForm #objid").val(this.id);

			var url = '/api/places/'+this.id;

			// We search for the place in mongo and we fill the form with the place's values
			$.ajax(url, {type: 'GET'}).done(function (response)
			{
				var place = response.place;
				$("#placeForm #place").val(place.formatted_address);

				var latlng = new google.maps.LatLng(place.location.lat, place.location.lng);
				getformattedAddress(latlng);
				placeMarker(latlng,markerLocation);
				map.setCenter(markerLocation.getPosition());
				$("#placeForm #licence").val(place.licence);
				$("#placeForm #origine").val(place.origin);
				$("#placeForm #outgoinglink").val(place.outGoingLink);
				$("#placeForm #title").val(place.title);
				$("#placeForm #content").val(place.content);
				$("#placeForm #freetag").val(place.freeTag);

				for (var i = 0; i < place.yakCat.length; i++)
				{
					var url = '/api/cats/'+place.yakCat[i];
					$.ajax(url, {type: 'GET'}).done(function (response)
					{
						var yakcat = response.cat;
						$("#pillYakcat").show();
						$("#pillYakcat ul").append("<li class='yakcat-val' data-value="+yakcat._id+">"+yakcat.title+"</li>");
						$('#placeForm #yakcat').val('').focus();
					});
				}

				$("#placeForm #freetag").val(place.freeTag.join(","));
				$("#placeForm #tel").val(place.contact.tel);
				$("#placeForm #mobile").val(place.contact.mobile);
				$("#placeForm #mail").val(place.contact.mail);
				$("#placeForm #transportation").val(place.contact.transportation);
				$("#placeForm #web").val(place.contact.web);
				$("#placeForm #opening").val(place.contact.opening);
				$("#placeForm #closing").val(place.contact.closing);
				$("#placeForm #special").val(place.contact.special_opening);

				$("#placeForm #status").val(place.status);

				// loading the thumb
				var imag = "<img class='img-rounded' " + "src='" + place.thumb +"' style='width:100px'/>";
				$("#placeForm #picturePreview").html(imag);
			});
		});

		// Add Place function
		$("#btnAdd").click(function()
		{
			event.preventDefault();
			listenerHandle = google.maps.event.addListener(map, 'click', function(event) {
				getformattedAddress(event.latLng);
				placeMarker(event.latLng,markerLocation);
				google.maps.event.addListener(markerLocation, 'dragend', function() {
					var position = markerLocation.getPosition();
					$('#placeForm #latitude').val(position.lat());
					$('#placeForm #longitude').val(position.lng());

					getformattedAddress(position);

				});
			});
			$("#MyGrid").hide();
			$("#placeForm")[0].reset();
			// We remove the error class when we open a form for creating a new place
			$('#placeForm #titleGroup').removeClass("error");
			$('#placeForm #contentGroup').removeClass("error");
			$('#placeForm #licenceGroup').removeClass("error");
			$('#placeForm #origineGroup').removeClass("error");
			$('#placeForm #adresseGroup').removeClass("error");
			$('#placeForm #content').val("");
			$('#placeLabel').first().remove();
			$("#btnBack").fadeIn();
			$("#placeForm").fadeIn();
			$("#placeForm legend").html("Ajouter une place");
			$(".catLabel").remove();
			$("#pillYakcat ul").empty();
			$('#err').hide();
			yakcatArray = new Array();
			yakcatNames = new Array();
		});


		// Function to go back from adding/editing form to the grid
		$("#btnBack").click(function() {
			$("#MyGrid").fadeIn();
			$("#placeForm").hide();
			$("#btnBack").hide();
			google.maps.event.removeListener(listenerHandle);
			markerLocation.setVisible(false);
		});

		// We validate the form before submitting it
		$('#placeForm').submit(function()
		{
			var err = false;
			if (placeArray.length == 0)
			{
				$('#placeForm #adresseGroup').addClass("error");
				$('#placeForm #place').focus()
				err = true;
			}
			else
				$('#placeForm #adresseGroup').removeClass("error");
			if ($('#placeForm #title').val() == "")
			{
				$('#placeForm #titleGroup').addClass("error");
				$('#placeForm #title').focus();
				err = true;
			}
			else
				$('#placeForm #titleGroup').removeClass("error");

			if (err)
			{
				$('#err').show();
				return false;
			}

			if ($("#pillYakcat").pillbox("items")) {
					$($("#pillYakcat").pillbox("items")).each(function() {
						yakcatArray.push(this.value);
						yakcatNames.push(this.text);
					});
				}
			$("#placeForm #yakcatInput").val(JSON.stringify(yakcatArray));
			$("#placeForm #yakcatNames").val(JSON.stringify(yakcatNames));

			var options = {
				success: function() {
					$("#btnBack").hide();
					$("#placeForm").hide();
					$("#MyGrid").fadeIn();
				}
			}

			//$(this).ajaxSubmit(options);

			return false;
		});

		/*POST EFFECTS*/
		// hashtag creation from title field
		$(".hashtagMaker").keyup(function(event) {
			hashtagTmp = [];
			var inputStrArray = ($('#content').val()+' '+$('#title').val()).split(' ');
			for(i = 0; i< inputStrArray.length;i++){
				if(inputStrArray[i].match(rule)){
					//console.log('PUSH');
					hashtagTmp.push(inputStrArray[i]);
					//console.log(hashtagTmp);
					$('#freetag').val(hashtagTmp.toString().replace(rule2,''));
				}
			}
		});

		$('#placeForm #picture').live('change', function () {
			if (window.FileReader) {
				var fileList = this.files;
				var file = fileList[0];
				var r = new FileReader();
				r.onload = function () {
					var binimage = r.result;
					//console.log(binimage);

					binimage1 = binimage.replace('data:'+file.type+';base64,', '');
					var imag = "<img class='img-rounded' " + "src='" +
					"data:"+file.type+";base64," + binimage1 + "' style='width:100px'/>";
					$("#placeForm #picturePreview").html(imag);
				};
				r.readAsDataURL(file);
			}
			//r.readAsBinaryString(file);
		});

		$('#placeForm #yakcat').typeahead({
			source: function (typeahead, query) {
				$.ajax({
					url: "/api/cats",
					success: function(data) {
						typeahead.process(data.cats);
					}
				})
			},
			property: "title",
			onselect: function(obj) {
				//$("label[for='category']").after("<div class='catLabel'><i class='icon-remove icon-pointer'  onclick='var index=yakcatArray.indexOf(\""+obj._id+"\"); yakcatArray.splice(index,1);$(\"#placeForm #yakcatInput\").val(JSON.stringify(yakcatArray));$(this).parent().remove();'></i> "+obj.title+"</div>");
				$("#pillYakcat").show();
				$("#pillYakcat ul").append("<li class='yakcat-val' data-value="+obj._id+">"+obj.title+"</li>");
				$('#placeForm #yakcat').val('').focus();
			}
		});

		$("li.yakcat-val").live('click', function() {
			if ($("#pillYakcat").pillbox("items").length == 0) {
				$("#pillYakcat").hide();
			}
		});

		$('#placeForm #licence').typeahead({
			source: ["Licence Ouverte", "Licence Libre"]
		});

		$('#placeForm #btn-place-adder').click(function(){

			var addressString = $('#placeForm #place').val();
			if(addressString != "Rechercher..." && addressString != "" && addressString.length > 1){
				var addressQuery = {"address": addressString,"latLng":map.getCenter(),"bounds":map.getBounds()};
				var geocoder = new google.maps.Geocoder();
				geocoder.geocode(addressQuery, function(results, status) {
					if (status == google.maps.GeocoderStatus.OK) {
						map.setCenter(results[0].geometry.location);
						markerLocation.setVisible(true);
						markerLocation.setPosition(results[0].geometry.location);
						placeMarker(results[0].geometry.location,markerLocation);
						var placeGmap = getPlaceFromGmapResult(results[0]);
						placeArray.push(placeGmap);
						$("#placeForm #placeInput").val(JSON.stringify(placeArray));
						$('#placeLabel').first().remove();
						$('#placeForm #btn-place-adder').parent().before("<div id='placeLabel'><i class='icon-remove icon-pointer' onclick='placeArray.cleanArrayByLocation("+results[0].geometry.location.Ya+","+results[0].geometry.location.Xa+");$(\"#placeForm #placeInput\").val(JSON.stringify(placeArray));$(this).parent().remove();'></i> "+results[0].formatted_address+"</div>");
						$("#placeForm #place").val("");
					} else {
						var salt = new Date().getTime();
						$('#placeForm #btn-place-adder').parent().before("<div id='alert"+salt+"' class='control-label'><i class='icon-exclamation-sign'> </i>Adresse invalide ("+status+")</div>");
						setTimeout(function() {
							$("#alert"+salt).fadeOut();
						}, 3000);
						$('#placeForm #place').select();
					}
				});
			}
		});

