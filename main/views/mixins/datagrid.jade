mixin datagrid()
	.fuelux
		- if (message)
			each msg in message
				div.alert.fade.in#alert
					button.close(type="button",data-dismiss="alert") x
					strong= msg

		div#newsfeedContainer
			mixin placeForm()

			table#MyGrid.table.table-bordered.datagrid
				thead
					tr.headerControle
						th
							.datagrid-header-left
								button.btn#btnAdd
									i.icon-plus
							.datagrid-header-right
								.input-append.search
									input#search.input-medium(type='text', placeholder='Search', data-provide="typeahead", autocomplete="off")
									button.btn
										i.icon-search
								a.showSearchPanel(href="#") Filtrer les résultats
						tr.headerControle.advancedSearch
							td.searchPanel(colspan=4, style="display:none")
								.yakCatFilter
									input#yakCat.typeahead(type="text", data-provide="typeahead", autocomplete="off", placeholder="Filtrer par thème")
									.pillbox#yakCatFilter(style="display:none")
										ul
								.userFilter
									input#userFilter.typeahead(type="text", data-provide="typeahead", autocomplete="off", placeholder="Filtrer par utilisateur")
									.pillbox#userFilter(style="display:none")
										ul
								.statusFilter
									select#filterStatus
										option(value="2") Places en attente
										option(value="1") Places validées
										option(value="3") Places rejetées
					tr.headerControle
						td(colspan=4)
							.btn-group
								button.btn.btn-danger.validerPlaces Valider
								button.btn.btn-danger.dropdown-toggle(data-toggle='dropdown')
									span.caret
								ul.dropdown-menu
									li
										a.supprimerPlaces Rejeter
							select#sortPlaces.datagrid-header-right
								option(value="creationDate") Date de création
								option(value="pubDate") Date de publication
								option(value="lastModifDate") Date de modification
				tfoot
					tr
						th
							.datagrid-footer-left(style='display: none;')
								.grid-controls
									span
										span.grid-start
										| -
										span.grid-end
										| of
										span.grid-count
									select.grid-pagesize
										option 10
										option 20
										option 50
										option 100
									span Per Page
							.datagrid-footer-right(style='display: none;')
								.grid-pager
									button.btn.grid-prevpage
										i.icon-chevron-left
									span Page
									.input-append.dropdown.combobox.dropup
										input.span1(type='text')
										button.btn(data-toggle='dropdown')
											i.caret
										ul.dropdown-menu
									span
										| of
										span.grid-pages
									button.btn.grid-nextpage
										i.icon-chevron-right

	script
		var yakcatArray = [];
		var yakcatNames = [];
		var placeArray = [];
		var hashtag = [];
		var hashtagTmp = [];

		var ApiDataSource = function (options) {
			this._formatter = options.formatter;
			this._columns = options.columns;
		};

		ApiDataSource.prototype = {

			columns: function () {
				return this._columns;
			},

			data: function (options, callback) {

				var url = '/api/places';
				var self = this;

				if (!options.search) {
					options.search = "^";
				}

				url += '/' + (options.pageIndex + 1);
				url += '/' + options.pageSize;
				url += '/' + options.search;

				var sortPropertyArray = [];
				var sortDirectionArray = [];

				if (options.sortProperty) {
					sortPropertyArray.push(options.sortProperty);
					sortDirectionArray.push(options.sortDirection);
				}

				// Always sort by dates, newest first
				sortPropertyArray.push( $('#sortPlaces :selected').val() );
				sortDirectionArray.push("desc");

				url += '/' + sortPropertyArray.join() + '/' + sortDirectionArray.join();

				//filter by status
				var status = $('#filterStatus :selected').val();
				url += '/' + status;

				// Filter by yakCats
				var apiCatArray = [];
				if ($($(".pillbox#yakCatFilter").pillbox("items")).length) {
					$($(".pillbox#yakCatFilter").pillbox("items")).each(function() {
						apiCatArray.push(this.value);
					});

					url += '/' + apiCatArray.join();
				}
				else  {
					url += '/__empty';
				}

				var userArray = [];
				if ($($(".pillbox#userFilter").pillbox("items")).length) {
					$($(".pillbox#userFilter").pillbox("items")).each(function() {
						userArray.push(this.value);
					});

					url += '/' + userArray.join();
				}
				else  {
					url += '/__allusers';
				}

				$.ajax(url, {
					type: 'GET'
				}).done(function (response) {
					// Prepare data to return to Datagrid
					var data = response.place;
					var count = response.count;
					var startIndex = (response.pageIndex - 1) * response.pageSize;
					var endIndex = parseInt(startIndex) + parseInt(response.pageSize);
					var end = (endIndex > count) ? count : endIndex;
					var page = parseInt(response.pageIndex);
					var pages = Math.ceil(response.count / response.pageSize);
					var start = startIndex + 1;

					if (self._formatter) self._formatter(data);

					callback({ data: data, start: start, end: end, count: count, pages: pages, page: page });

				});
			}
		};

		$('#MyGrid').datagrid({
			dataSource: new ApiDataSource({
				columns: [{
					property: 'checked',
					label: '<input id="selectAllPlaces" type="checkbox" />',
					sortable: false
				},
				{
					property: 'title',
					label: 'Liste des places',
					sortable: true
				},
				{
					property: 'user',
					label: 'Utilisateur',
					sortable: true
				},
				{
					property: 'zone',
					label: 'Ville',
					sortable: true
				}],
				formatter: function (items) {
					$.each(items, function (index, item) {
						item.checked = makeCheckBox(item);
						item.title = fillContent(item);
						item.zone = formatZone(item.zone);
						item.user = formatUser(item.user);
					});
				}
			})
		});

		function makeCheckBox(item) {
			return '<input type="checkbox" class="selectYakPlace" value="' + item._id + '"/>';
		}

		function fillContent(item) {
			var res;
			var size = 80;

			res = '<a class="editPlace" id="' + item._id + '" href="#">';
			res += '<div class="text-info">' + item.title + '</div><small>';
			if (item.content.length > size)
				res += '<em>' + item.content.slice(0, size) + '...</em>';
			else
				res += '<em>' + item.content + '</em>';
			if (item.outGoingLink)
				res += '<br><a href=\''+ item.outGoingLink + '\'>' + item.outGoingLink + '</a>';
			res += '</small></a>';
			return res;
		}

		// Toggle searchPanel
		$('a.showSearchPanel').live('click', function() {
			$("td.searchPanel").toggle("fast");
		});

		// Searchpanel yakcat input
		$('input#yakCat').typeahead({
			source: function (typeahead, query) {
				$.ajax({
					url: "/api/cats",
					success: function(data) {
						typeahead.process(data.cats);
					}
				})
			},
			property: "title",
			onselect: function(obj) {
				$(".pillbox#yakCatFilter").show();
				$(".pillbox#yakCatFilter ul").append("<li class='yakcat-value' data-value="+obj._id+">"+obj.title+"</li>");

				$('input#yakCat').val('').focus();
				refreshDatagridAndMenu();
			}
		});

		// Searchpanel yakcat input
		$('input#userFilter').typeahead({
			source: function (typeahead, query) {
				$.ajax({
					url: "/api/users",
					success: function(data) {
						typeahead.process(data.users);
					}
				})
			},
			property: "name",
			onselect: function(obj) {
				$(".pillbox#userFilter").show();
				$(".pillbox#userFilter ul").append("<li class='user-value' data-value="+obj._id+">"+obj.name+"</li>");

				$('input#userFilter').val('').focus();
				refreshDatagridAndMenu();
			}
		});

		// Refresh on sort selection
		$('#sortPlaces').live('change', function() {
			refreshDatagridAndMenu();
		});
		// Refresh on sort selection
		$('#filterStatus').live('change', function() {
			refreshDatagridAndMenu();
		});

		//Autocomplete on title (search input)
		$('input#search').typeahead({
			source: function (typeahead, query) {
				$.ajax({
					url: "/api/places",
					success: function(data) {
						typeahead.process(data.places);
					}
				})
			},
			property: "title"
		});

		function formatUser(userId) {
			var res;
			$.ajax({
				url: '/api/user/'+ userId,
				dataType: 'json',
				async: false,
				success: function(data) {
					if (data['user'])
						res = data['user'].name;
					else
						res = "Utilisateur inconnu";
				}
			});
			return res;
		}

		function formatZone(zoneId) {
			var res;
			$.ajax({
				url: '/api/zones/'+ zoneId,
				dataType: 'json',
				async: false,
				success: function(data) {
					if (data['zone'])
						res = data['zone'].name;
					else
						res = "Zone inconnue";
				}
			});

			return res;
		}

		$("#validation").change(function() {
			$.getJSON('/api/places/'+ $(this).val(),function(data) {
				$('div#placeContent').html("");
				renderData(data);
			});
		});

		// Datagrid checkbox
		$(".selectYakPlace").live('change', function() {
			if ($(this).prop('checked') == false)
				$("#selectAllPlaces").prop('checked', false);
		});

		$("#selectAllPlaces").change(function() {
			$(".selectYakPlace").prop('checked', $(this).prop('checked'));
		});

		$(".validerPlaces").live('click', function() {
			var vals = [];
			var i = 0;

			$(".selectYakPlace").each(function(){
				if ($(this).prop('checked') == true)
					vals[i++] = jQuery(this).val();
			});

			if (vals.length == 0) {
				// alert('Aucune place selectionnee.');
				return;
			}

			var url = '/api/places/validate/'+vals.toString();

			$.get(url, function(data) {
				if (data.result == -1)
					alert('Erreur lors de la validation');
				else {
					// alert('Validation de ' + data.result + ' place(s)');
					refreshDatagridAndMenu();
				}
			});

			return vals;
		});

		$(".supprimerPlaces").live('click', function() {
			var vals = [];
			var i = 0;

			$(".selectYakPlace").each(function(){
				if ($(this).prop('checked') == true)
					vals[i++] = jQuery(this).val();
			});

			if (vals.length == 0) {
				// alert('Aucune place selectionnee.');
				return;
			}

			var url = '/api/places/delete/'+vals.toString();

			$.get(url, function(data) {
				if (data.result == -1)
					alert('Erreur lors de la suppression');
				else {
					// alert('Suppression de ' + data.result + ' place(s)');
					refreshDatagridAndMenu();
				}
			});

			return vals;
		});


		function refreshDatagridAndMenu () {
			// Temporary refresh method for datagrid
			var $gridsearch = jQuery('#MyGrid').find('.search');
			var search = $gridsearch.find('input').val();
			$gridsearch.trigger('searched', search);
			$.getJSON('/api/validplaces', function(data) {
				$('#placenumber').removeClass('badge badge-important');
				if (data.info != 0)
					$('#placenumber').addClass('badge badge-important').html(data.info);
			});
		}

		$("li.yakcat-value").live('click', function() {
			if ($(".pillbox#yakCatFilter").pillbox("items").length == 0) {
				$(".pillbox#yakCatFilter").hide();
			}
			refreshDatagridAndMenu();
		});

		$("li.user-value").live('click', function() {
			if ($(".pillbox#userFilter").pillbox("items").length == 0) {
				$(".pillbox#userFilter").hide();
			}
			refreshDatagridAndMenu();
		});