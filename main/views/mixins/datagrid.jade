mixin datagrid()
	.fuelux
		- if (message)
			each msg in message
				div.alert.fade.in#alert
					button.close(type="button",data-dismiss="alert") x
					strong= msg

		div#newsfeedContainer
			mixin placeForm()

			table#MyGrid.table.table-bordered.datagrid
				thead
					tr.headerControle
						th
							.datagrid-header-left
								button.btn#btnAdd
									i.icon-plus
							.datagrid-header-right
								.input-append.search
									input.input-medium(type='text', placeholder='Search')
									button.btn
										i.icon-search
								a.showSearchPanel(href="#") Recherche avancée
						tr.headerControle.advancedSearch
							td.searchPanel(colspan=4, style="display:none")
								input#yakCat.typeahead(type="text", data-provide="typeahead", autocomplete="off", placeholder="Ajouter un thème")
								.pillbox(style="display:none")
									ul
					tr.headerControle
						td(colspan=4)
							.btn-group
								button.btn.btn-danger.validerPlaces Valider
								button.btn.btn-danger.dropdown-toggle(data-toggle='dropdown')
									span.caret
								ul.dropdown-menu
									li
										a.supprimerPlaces Supprimer
							select#sortPlaces.datagrid-header-right
								option(value="creationDate") Date de création
								option(value="pubDate") Date de publication
								option(value="lastModifDate") Date de modification
				tfoot
					tr
						th
							.datagrid-footer-left(style='display: none;')
								.grid-controls
									span
										span.grid-start
										| -
										span.grid-end
										| of
										span.grid-count
									select.grid-pagesize
										option 10
										option 20
										option 50
										option 100
									span Per Page
							.datagrid-footer-right(style='display: none;')
								.grid-pager
									button.btn.grid-prevpage
										i.icon-chevron-left
									span Page
									.input-append.dropdown.combobox.dropup
										input.span1(type='text')
										button.btn(data-toggle='dropdown')
											i.caret
										ul.dropdown-menu
									span
										| of
										span.grid-pages
									button.btn.grid-nextpage
										i.icon-chevron-right

	script
		var yakcatArray = [];
		var yakcatNames = [];
		var placeArray = [];
		var hashtag = [];
		var hashtagTmp = [];

		var ApiDataSource = function (options) {
			this._formatter = options.formatter;
			this._columns = options.columns;
		};

		ApiDataSource.prototype = {

			columns: function () {
				return this._columns;
			},

			data: function (options, callback) {

				var url = '/api/places';
				var self = this;

				if (!options.search) {
					options.search = "^";
				}

				url += '/' + (options.pageIndex + 1);
				url += '/' + options.pageSize;
				url += '/' + options.search;

				if (options.sortProperty) {
					url += '/' + options.sortProperty;
					url += '/' + options.sortDirection;
				}
				else {
					var sort = $('#sortPlaces :selected').val();
					url += '/' + sort + '/asc';
				}

				// Filter by yakCats
				var apiCatArray = [];
				if ($(".pillbox").pillbox("items")) {
					$($(".pillbox").pillbox("items")).each(function() {
						apiCatArray.push(this.value);
					});
					url += '/' + apiCatArray.join();
				}

				$.ajax(url, {
					type: 'GET'
				}).done(function (response) {
					// Prepare data to return to Datagrid
					var data = response.place;
					var count = response.count;
					var startIndex = (response.pageIndex - 1) * response.pageSize;
					var endIndex = parseInt(startIndex) + parseInt(response.pageSize);
					var end = (endIndex > count) ? count : endIndex;
					var page = parseInt(response.pageIndex);
					var pages = Math.ceil(response.count / response.pageSize);
					var start = startIndex + 1;

					if (self._formatter) self._formatter(data);

					callback({ data: data, start: start, end: end, count: count, pages: pages, page: page });

				});
			}
		};

		$('#MyGrid').datagrid({
			dataSource: new ApiDataSource({
				columns: [{
					property: 'checked',
					label: '<input id="selectAllPlaces" type="checkbox" />',
					sortable: false
				},
				{
					property: 'title',
					label: 'Liste des places',
					sortable: true
				},
				{
					property: 'user',
					label: 'Utilisateur',
					sortable: true
				},
				{
					property: 'zone',
					label: 'Ville',
					sortable: true
				}],
				formatter: function (items) {
					$.each(items, function (index, item) {
						item.checked = makeCheckBox(item);
						item.title = fillContent(item);
						item.zone = formatZone(item.zone);
						if (item.user)
							item.user = formatUser(item);
						else
							item.user = "Yakwala";
					});
				}
			})
		});

		function makeCheckBox(item) {
			return '<input type="checkbox" class="selectYakPlace" value="' + item._id + '"/>';
		}

		function fillContent(item) {
			var res;
			var size = 80;

			res = '<a class="editPlace" id="' + item._id + '" href="#">';
			res += '<div class="text-info">' + item.title + '</div><small>';
			if (item.content.length > size)
				res += '<em>' + item.content.slice(0, size) + '...</em>';
			else
				res += '<em>' + item.content + '</em>';
			if (item.outGoingLink)
				res += '<br><a href=\''+ item.outGoingLink + '\'>' + item.outGoingLink + '</a>';
			res += '</small></a>';
			return res;
		}

		// Toggle searchPanel
		$('a.showSearchPanel').live('click', function() {
			$("td.searchPanel").toggle("fast");
		});

		// Searchpanel yakcat input
		$('input#yakCat').typeahead({
			source: function (typeahead, query) {
				$.ajax({
					url: "/api/cats",
					success: function(data) {
						typeahead.process(data.cats);
					}
				})
			},
			property: "title",
			onselect: function(obj) {
				$(".pillbox").show();
				$(".pillbox ul").append("<li class='yakcat-value' data-value="+obj._id+">"+obj.title+"</li>");

				$('input#yakCat').val('').focus();
				refreshDatagridAndMenu();
			}
		});

		// Refresh on sort selection
		$('#sortPlaces').live('change', function() {
			refreshDatagridAndMenu();
		});

		// Edit Place function
		$(".editPlace").live('click', function()
		{
			event.preventDefault();
			listenerHandle = google.maps.event.addListener(map, 'click', function(event) {
				getformattedAddress(event.latLng);
				placeMarker(event.latLng,markerLocation);
				google.maps.event.addListener(markerLocation, 'dragend', function() {
					var position = markerLocation.getPosition();
					$('#placeForm #latitude').val(position.lat());
					$('#placeForm #longitude').val(position.lng());

					getformattedAddress(position);

				});
			});

			$("#MyGrid").hide();
			// We remove the error class when we open a form for editing a place
			$('#placeForm #titleGroup').removeClass("error");
			$('#placeForm #contentGroup').removeClass("error");
			$('#placeForm #licenceGroup').removeClass("error");
			$('#placeForm #origineGroup').removeClass("error");
			$('#placeForm #adresseGroup').removeClass("error");
			$("#btnBack").fadeIn();
			$("#placeForm").fadeIn();
			$(".catLabel").remove();
			$("#pillYakcat ul").empty();
			$('#err').hide();
			yakcatArray = new Array();
			yakcatNames = new Array();

			$("#placeForm legend").html("Editer une place");
			$("#placeForm #objid").val(this.id);

			var url = '/api/places/'+this.id;

			// We search for the place in mongo and we fill the form with the place's values
			$.ajax(url, {type: 'GET'}).done(function (response)
			{
				var place = response.place;
				$("#placeForm #place").val(place.formatted_address);

				var latlng = new google.maps.LatLng(place.location.lat, place.location.lng);
				getformattedAddress(latlng);
				placeMarker(latlng,markerLocation);
				map.setCenter(markerLocation.getPosition());
				$("#placeForm #licence").val(place.licence);
				$("#placeForm #origine").val(place.origin);
				$("#placeForm #title").val(place.title);
				$("#placeForm #content").val(place.content);
				$("#placeForm #freetag").val(place.freeTag);

				for (var i = 0; i < place.yakCat.length; i++)
				{
					var url = '/api/cats/'+place.yakCat[i];
					$.ajax(url, {type: 'GET'}).done(function (response)
					{
						var yakcat = response.cat;
						$("#pillYakcat").show();
						$("#pillYakcat ul").append("<li class='yakcat-val' data-value="+yakcat._id+">"+yakcat.title+"</li>");
						$('#placeForm #yakcat').val('').focus();
					});
				}

				$("#placeForm #freetag").val(place.freeTag.join(","));
				$("#placeForm #tel").val(place.contact.tel);
				$("#placeForm #mobile").val(place.contact.mobile);
				$("#placeForm #mail").val(place.contact.mail);
				$("#placeForm #transportation").val(place.contact.transportation);
				$("#placeForm #web").val(place.contact.web);
				$("#placeForm #opening").val(place.contact.opening);
				$("#placeForm #closing").val(place.contact.closing);
				$("#placeForm #special").val(place.contact.special_opening);

				$("#placeForm #status").val(place.status);

				// loading the thumb
				var imag = "<img class='img-rounded' " + "src='" + place.thumb +"' style='width:100px'/>";
				$("#placeForm #picturePreview").html(imag);
			});
		});

		// Add Place function
		$("#btnAdd").click(function()
		{
			event.preventDefault();
			listenerHandle = google.maps.event.addListener(map, 'click', function(event) {
				getformattedAddress(event.latLng);
				placeMarker(event.latLng,markerLocation);
				google.maps.event.addListener(markerLocation, 'dragend', function() {
					var position = markerLocation.getPosition();
					$('#placeForm #latitude').val(position.lat());
					$('#placeForm #longitude').val(position.lng());

					getformattedAddress(position);

				});
			});
			$("#MyGrid").hide();
			$("#placeForm")[0].reset();
			// We remove the error class when we open a form for creating a new place
			$('#placeForm #titleGroup').removeClass("error");
			$('#placeForm #contentGroup').removeClass("error");
			$('#placeForm #licenceGroup').removeClass("error");
			$('#placeForm #origineGroup').removeClass("error");
			$('#placeForm #adresseGroup').removeClass("error");
			$('#placeForm #content').val("");
			$('#placeLabel').first().remove();
			$("#btnBack").fadeIn();
			$("#placeForm").fadeIn();
			$("#placeForm legend").html("Ajouter une place");
			$(".catLabel").remove();
			$("#pillYakcat ul").empty();
			$('#err').hide();
			yakcatArray = new Array();
			yakcatNames = new Array();
		});


		// Function to go back from adding/editing form to the grid
		$("#btnBack").click(function() {
			$("#MyGrid").fadeIn();
			$("#placeForm").hide();
			$("#btnBack").hide();
			google.maps.event.removeListener(listenerHandle);
			markerLocation.setVisible(false);
		});

		function formatUser(item) {
			var res;
			$.ajax({
				url: '/api/user/'+ item.user,
				dataType: 'json',
				async: false,
				success: function(data) {
					return data.user.name;
				}
			});
		}

		function formatZone(zoneId) {
			var res;
			$.ajax({
				url: '/api/zones/'+ zoneId,
				dataType: 'json',
				async: false,
				success: function(data) {
					if (data['zone'])
						res = data['zone'].name;
					else
						res = "Zone inconnue";
				}
			});

			return res;
		}

		/*
		$("#validation").change(function() {
			$.getJSON('/api/places/'+ $(this).val(),function(data) {
				$('div#placeContent').html("");
				renderData(data);
			});
		});
		*/

		// Datagrid checkbox
		$(".selectYakPlace").live('change', function() {
			if ($(this).prop('checked') == false)
				$("#selectAllPlaces").prop('checked', false);
		});

		$("#selectAllPlaces").change(function() {
			$(".selectYakPlace").prop('checked', $(this).prop('checked'));
		});

		$(".validerPlaces").live('click', function() {
			var vals = [];
			var i = 0;

			$(".selectYakPlace").each(function(){
				if ($(this).prop('checked') == true)
					vals[i++] = jQuery(this).val();
			});

			if (vals.length == 0) {
				alert('Aucune place selectionnee.');
				return;
			}

			var url = '/api/places/validate/'+vals.toString();

			$.get(url, function(data) {
				if (data.result == -1)
					alert('Error');
				else {
					alert('Validation de ' + data.result + ' place(s)');
					refreshDatagridAndMenu();
				}
			});

			return vals;
		});

		$(".supprimerPlaces").live('click', function() {
			var vals = [];
			var i = 0;

			$(".selectYakPlace").each(function(){
				if ($(this).prop('checked') == true)
					vals[i++] = jQuery(this).val();
			});

			if (vals.length == 0) {
				alert('Aucune place selectionnee.');
				return;
			}

			var url = '/api/places/delete/'+vals.toString();

			$.get(url, function(data) {
				if (data.result == -1)
					alert('Error');
				else {
					alert('Suppression de ' + data.result + ' place(s)');
					refreshDatagridAndMenu();
				}
			});

			return vals;
		});


		function refreshDatagridAndMenu () {
			// Temporary refresh method for datagrid
			var $gridsearch = jQuery('#MyGrid').find('.search');
			var search = $gridsearch.find('input').val();
			$gridsearch.trigger('searched', search);
			$.getJSON('/api/validplaces', function(data) {
				$('#placenumber').removeClass('badge badge-important');
				if (data.info != 0)
					$('#placenumber').addClass('badge badge-important').html(data.info);
			});
		}

		$("li.yakcat-value").live('click', function() {
			if ($(".pillbox").pillbox("items").length == 0) {
				$(".pillbox").hide();
			}
			refreshDatagridAndMenu();
		});

		// We validate the form before submitting it
		$('#placeForm').submit(function()
		{
			var err = false;
			if ($('#placeForm #title').val() == "")
			{
				$('#placeForm #titleGroup').addClass("error");
				err = true;
			}
			else
				$('#placeForm #titleGroup').removeClass("error");
			if (placeArray.length == 0)
			{
				$('#placeForm #adresseGroup').addClass("error");
				err = true;
			}
			else
				$('#placeForm #adresseGroup').removeClass("error");

			if (err)
			{
				$('#err').show();
				return false;
			}

			if ($("#pillYakcat").pillbox("items")) {
					$($("#pillYakcat").pillbox("items")).each(function() {
						yakcatArray.push(this.value);
						yakcatNames.push(this.text);
					});
				}
			$("#placeForm #yakcatInput").val(JSON.stringify(yakcatArray));
			$("#placeForm #yakcatNames").val(JSON.stringify(yakcatNames));

			return true;
		});

		/*POST EFFECTS*/
		// hashtag creation from title field
		$(".hashtagMaker").keyup(function(event) {
			hashtagTmp = [];
			var inputStrArray = ($('#content').val()+' '+$('#title').val()).split(' ');
			for(i = 0; i< inputStrArray.length;i++){
				if(inputStrArray[i].match(rule)){
					//console.log('PUSH');
					hashtagTmp.push(inputStrArray[i]);
					//console.log(hashtagTmp);
					$('#freetag').val(hashtagTmp.toString().replace(rule2,''));
				}
			}
		});

		$('#placeForm #picture').live('change', function () {
			if (window.FileReader) {
				var fileList = this.files;
				var file = fileList[0];
				var r = new FileReader();
				r.onload = function () {
					var binimage = r.result;
					//console.log(binimage);

					binimage1 = binimage.replace('data:'+file.type+';base64,', '');
					var imag = "<img class='img-rounded' " + "src='" +
					"data:"+file.type+";base64," + binimage1 + "' style='width:100px'/>";
					$("#placeForm #picturePreview").html(imag);
				};
				r.readAsDataURL(file);
			}
			//r.readAsBinaryString(file);
		});

		$('#placeForm #yakcat').typeahead({
			source: function (typeahead, query) {
				$.ajax({
					url: "/api/cats",
					success: function(data) {
						typeahead.process(data.cats);
					}
				})
			},
			property: "title",
			onselect: function(obj) {
				//$("label[for='category']").after("<div class='catLabel'><i class='icon-remove icon-pointer'  onclick='var index=yakcatArray.indexOf(\""+obj._id+"\"); yakcatArray.splice(index,1);$(\"#placeForm #yakcatInput\").val(JSON.stringify(yakcatArray));$(this).parent().remove();'></i> "+obj.title+"</div>");
				$("#pillYakcat").show();
				$("#pillYakcat ul").append("<li class='yakcat-val' data-value="+obj._id+">"+obj.title+"</li>");
				$('#placeForm #yakcat').val('').focus();
			}
		});

		$("li.yakcat-val").live('click', function() {
			if ($("#pillYakcat").pillbox("items").length == 0) {
				$("#pillYakcat").hide();
			}
		});

		$('#placeForm #licence').typeahead({
			source: ["Licence Ouverte", "Licence Libre"]
		});

		$('#placeForm #btn-place-adder').click(function(){

			var addressString = $('#placeForm #place').val();
			if(addressString != "Rechercher..." && addressString != "" && addressString.length > 1){
				var addressQuery = {"address": addressString,"latLng":map.getCenter(),"bounds":map.getBounds()};
				var geocoder = new google.maps.Geocoder();
				geocoder.geocode(addressQuery, function(results, status) {
					if (status == google.maps.GeocoderStatus.OK) {
						map.setCenter(results[0].geometry.location);
						markerLocation.setVisible(true);
						markerLocation.setPosition(results[0].geometry.location);
						placeMarker(results[0].geometry.location,markerLocation);
						var placeGmap = getPlaceFromGmapResult(results[0]);
						placeArray.push(placeGmap);
						$("#placeForm #placeInput").val(JSON.stringify(placeArray));
						$('#placeLabel').first().remove();
						$('#placeForm #btn-place-adder').parent().before("<div id='placeLabel'><i class='icon-remove icon-pointer' onclick='placeArray.cleanArrayByLocation("+results[0].geometry.location.Ya+","+results[0].geometry.location.Xa+");$(\"#placeForm #placeInput\").val(JSON.stringify(placeArray));$(this).parent().remove();'></i> "+results[0].formatted_address+"</div>");
						$("#placeForm #place").val("");
					} else {
						var salt = new Date().getTime();
						$('#placeForm #btn-place-adder').parent().before("<div id='alert"+salt+"' class='control-label'><i class='icon-exclamation-sign'> </i>Adresse invalide ("+status+")</div>");
						setTimeout(function() {
							$("#alert"+salt).fadeOut();
						}, 3000);
						$('#placeForm #place').select();
					}
				});
			}
		});

